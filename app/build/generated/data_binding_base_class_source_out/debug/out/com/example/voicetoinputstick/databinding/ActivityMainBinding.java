// Generated by view binder compiler. Do not edit!
package com.example.voicetoinputstick.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.voicetoinputstick.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox autoSendCheckbox;

  @NonNull
  public final TextView flashingIndicator;

  @NonNull
  public final LinearLayout mainLayout;

  @NonNull
  public final Button recordButton;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final Button settingsButton;

  @NonNull
  public final Button stopButton;

  @NonNull
  public final TextView timerTextView;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull CheckBox autoSendCheckbox,
      @NonNull TextView flashingIndicator, @NonNull LinearLayout mainLayout,
      @NonNull Button recordButton, @NonNull Button sendButton, @NonNull Button settingsButton,
      @NonNull Button stopButton, @NonNull TextView timerTextView) {
    this.rootView = rootView;
    this.autoSendCheckbox = autoSendCheckbox;
    this.flashingIndicator = flashingIndicator;
    this.mainLayout = mainLayout;
    this.recordButton = recordButton;
    this.sendButton = sendButton;
    this.settingsButton = settingsButton;
    this.stopButton = stopButton;
    this.timerTextView = timerTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoSendCheckbox;
      CheckBox autoSendCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (autoSendCheckbox == null) {
        break missingId;
      }

      id = R.id.flashingIndicator;
      TextView flashingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (flashingIndicator == null) {
        break missingId;
      }

      LinearLayout mainLayout = (LinearLayout) rootView;

      id = R.id.recordButton;
      Button recordButton = ViewBindings.findChildViewById(rootView, id);
      if (recordButton == null) {
        break missingId;
      }

      id = R.id.sendButton;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.settingsButton;
      Button settingsButton = ViewBindings.findChildViewById(rootView, id);
      if (settingsButton == null) {
        break missingId;
      }

      id = R.id.stopButton;
      Button stopButton = ViewBindings.findChildViewById(rootView, id);
      if (stopButton == null) {
        break missingId;
      }

      id = R.id.timerTextView;
      TextView timerTextView = ViewBindings.findChildViewById(rootView, id);
      if (timerTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, autoSendCheckbox, flashingIndicator,
          mainLayout, recordButton, sendButton, settingsButton, stopButton, timerTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
